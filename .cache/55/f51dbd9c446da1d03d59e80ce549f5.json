{"id":"../../node_modules/core-js/modules/es.regexp.constructor.js","dependencies":[{"name":"C:\\Users\\newbu\\Documents\\naijatours\\package.json","includedInParent":true,"mtime":1579052424644},{"name":"C:\\Users\\newbu\\Documents\\naijatours\\.babelrc","includedInParent":true,"mtime":1578885578538},{"name":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1578884568474},{"name":"../internals/descriptors","loc":{"line":1,"column":26},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\descriptors.js"},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/is-forced","loc":{"line":3,"column":23},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\is-forced.js"},{"name":"../internals/inherit-if-required","loc":{"line":4,"column":32},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\inherit-if-required.js"},{"name":"../internals/object-define-property","loc":{"line":5,"column":29},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\object-define-property.js"},{"name":"../internals/object-get-own-property-names","loc":{"line":6,"column":34},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\object-get-own-property-names.js"},{"name":"../internals/is-regexp","loc":{"line":7,"column":23},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\is-regexp.js"},{"name":"../internals/regexp-flags","loc":{"line":8,"column":23},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\regexp-flags.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":9,"column":28},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/redefine","loc":{"line":10,"column":23},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\redefine.js"},{"name":"../internals/fails","loc":{"line":11,"column":20},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/internal-state","loc":{"line":12,"column":31},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/set-species","loc":{"line":13,"column":25},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\set-species.js"},{"name":"../internals/well-known-symbol","loc":{"line":14,"column":30},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.constructor.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\well-known-symbol.js"}],"generated":{"js":"\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.constructor.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../../node_modules/core-js/modules/es.regexp.constructor.js":"var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n"},"lineCount":86}},"error":null,"hash":"e9c4a222ebc7b085cf2ac6060028e11c","cacheData":{"env":{}}}