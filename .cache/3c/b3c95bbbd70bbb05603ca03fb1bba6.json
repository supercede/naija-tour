{"id":"../../node_modules/core-js/modules/es.regexp.sticky.js","dependencies":[{"name":"C:\\Users\\newbu\\Documents\\naijatours\\package.json","includedInParent":true,"mtime":1578885759920},{"name":"C:\\Users\\newbu\\Documents\\naijatours\\.babelrc","includedInParent":true,"mtime":1578885578538},{"name":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1578884568474},{"name":"../internals/descriptors","loc":{"line":1,"column":26},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\descriptors.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":2,"column":28},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/object-define-property","loc":{"line":3,"column":29},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\object-define-property.js"},{"name":"../internals/internal-state","loc":{"line":4,"column":31},"parent":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"C:\\Users\\newbu\\Documents\\naijatours\\node_modules\\core-js\\internals\\internal-state.js"}],"generated":{"js":"var DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\nvar RegExpPrototype = RegExp.prototype;\n\n// `RegExp.prototype.sticky` getter\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../../node_modules/core-js/modules/es.regexp.sticky.js":"var DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\nvar RegExpPrototype = RegExp.prototype;\n\n// `RegExp.prototype.sticky` getter\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n"},"lineCount":22}},"error":null,"hash":"807a8070df125acecd069c637d7d4dad","cacheData":{"env":{}}}